import threading
from datetime import datetime

from selenium.webdriver import ActionChains, Keys
from selenium.webdriver.chrome import webdriver
from selenium.webdriver.chrome.options import Options
from datetime import time, datetime
from selenium.webdriver.common.by import By
from selenium.webdriver import Chrome, ActionChains, Keys
from selenium.webdriver import ChromeOptions
from selenium.webdriver.common.by import By

def t():
    option = Options()
    option.add_experimental_option('excludeSwitches', ['enable-automation'])
    driver = Chrome(options=option)
    # 登录
    driver.get('https://rz.zjhu.edu.cn/cas/login?service=http://icspace.lib.zjhu.edu.cn')
    # 防止selenium被检测
    driver.execute_cdp_cmd("Page.addScriptToEvaluateOnNewDocument", {
        "source": """
        Object.defineProperty(navigator, 'webdriver', {
          get: () => false
        })
      """
    })
    name = driver.find_element(by=By.ID, value='username')
    name.send_keys('2021082320')  # 输入学号
    password = driver.find_element(by=By.ID, value='ppassword')
    password.send_keys('zh123456@')  # 输入密码
    login = driver.find_element(by=By.ID, value='dl')
    login.click()  # 点击登录按钮
    driver.implicitly_wait(1000)
    el = driver.find_element(By.XPATH, value='/html/body/div/div[1]/div[3]/div[2]/div[1]/div/div[4]/div/div[2]')  # 找到元素
    ActionChains(driver).move_to_element(el).click().perform()
    input_element = driver.find_element(By.XPATH,
                                        value='//*[@id="app"]/div[1]/div[3]/div[2]/div[3]/div[2]/div/section/div/input')
    input_element.clear()
    input_element.send_keys("2024-01-19")
    input_element.send_keys(Keys.ENTER)
    driver.implicitly_wait(1000)
    el = driver.find_element(By.XPATH,
                             value='/html/body/div[1]/div[1]/div[3]/div[2]/div[3]/div[2]/div/div[3]/div[1]/div/div[3]/span/button[1]')  # 找到元素
    while True:
        if (datetime.now().strftime('%Y-%m-%d %H:%M:%S') == "2024-01-17 22:30:00"):
            ActionChains(driver).move_to_element(el).click().perform()
            break
def main():
    for idx in range(5):
        threading.Thread(target=t).start()
    # 等待所有线程执行完毕
    for thread in threading.enumerate():
        if thread is not threading.current_thread():
            thread.join()
if __name__ == "__main__":
    main()
