class Solution {
    public int trap(int[] height) {
        int n = height.length;
        int[] leftMax = new int[n]; int[] rightMax = new int[n];
        int[] index = new int[n];
        int maxFlag = 0;
        for (int i = 0; i < n; i++) {
            leftMax[i] = maxFlag;
            maxFlag = Math.max(maxFlag,height[i]);
        }
        maxFlag = 0;
        for (int i = n-1; i >= 0; i--) {
            rightMax[i] = maxFlag;
            maxFlag = Math.max(maxFlag,height[i]);
        }
        int sum = 0;
        for (int i = 0; i < n; i++) {
            int cur = Math.max(0,Math.min(leftMax[i],rightMax[i]) - height[i]);
            sum += cur;
        }
        return sum;
    }
}
class TestHttpClient {
    public void test01Get() throws IOException {
        CloseableHttpClient httpClient = HttpClientBuilder.create().build();
        HttpGet httpGet = new HttpGet("Http://www.baidu.com");
        CloseableHttpResponse response = httpClient.execute(httpGet);
        HttpEntity httpEntity = response.getEntity();
        String responseData = EntityUtils.toString(httpEntity);
        System.out.println(responseData);
        response.close();
        httpClient.close();
    }
}